services:
  # PostgreSQL for Airflow metadata
  airflow-db:
    image: postgres:15
    container_name: okr_airflow_db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - okr_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # PostgreSQL for OKR data pipeline
  postgres:
    image: postgres:15
    container_name: okr_postgres_data
    environment:
      POSTGRES_USER: okr_admin
      POSTGRES_PASSWORD: okr_password
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deploy/postgres/init:/docker-entrypoint-initdb.d
    ports:   # âœ… correct place
      - "5433:5432"
    restart: always
    networks:
      - okr_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U okr_admin -d okr_raw"]
      interval: 30s
      timeout: 10s
      retries: 20
      start_period: 180s

  # Redis for Airflow (optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: okr_redis
    restart: always
    networks:
      - okr_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 10

  # Kafka with KRaft mode
  kafka:
    image: bitnami/kafka:latest
    container_name: okr_kafka
    hostname: kafka
    environment:
      - KAFKA_KRAFT_MODE=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LOG_RETENTION_HOURS=168
      - KAFKA_CFG_LOG_SEGMENT_BYTES=1073741824
      - KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS=300000
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka
    restart: always
    depends_on:
      airflow-db:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - okr_net
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 60s
      timeout: 20s
      retries: 15
      start_period: 120s

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: okr_kafka_ui
    ports:
      - "8085:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=okr
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_READONLY=false
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - okr_net

  # Airflow webserver
  airflow-webserver:
    image: apache/airflow:2.9.2
    container_name: okr_airflow_webserver
    depends_on:
      airflow-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=30e6QztCFtuew7bCiQUZiomQd0eq2eWwHf39LaQyBaU=
      - AIRFLOW__WEBSERVER__SECRET_KEY=supersecret
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=true
      - AIRFLOW__WEBSERVER__RBAC=true
      - AIRFLOW__WEBSERVER__AUTHENTICATE=true
      - AIRFLOW__WEBSERVER__AUTH_BACKEND=airflow.auth.backend.basic_auth
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=UTC
      - AIRFLOW__WEBSERVER__HOST=0.0.0.0
      - AIRFLOW__WEBSERVER__PORT=8080
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PYTHONPATH=/opt/airflow/src:/opt/airflow
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=okr_admin
      - POSTGRES_PASSWORD=okr_password
      - POSTGRES_PORT=5432
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    user: "50000:0"
    volumes:
      - ./src/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./configs:/opt/airflow/configs
      - ./logs:/opt/airflow/logs
      - ./airflow-init.sh:/airflow-init.sh
    ports:
      - "8081:8080"
    restart: always
    networks:
      - okr_net
    command: ["airflow", "webserver"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Airflow scheduler
  airflow-scheduler:
    image: apache/airflow:2.9.2
    container_name: okr_airflow_scheduler
    depends_on:
      airflow-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=30e6QztCFtuew7bCiQUZiomQd0eq2eWwHf39LaQyBaU=
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=false
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=UTC
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - PYTHONPATH=/opt/airflow/src:/opt/airflow
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=okr_admin
      - POSTGRES_PASSWORD=okr_password
      - POSTGRES_PORT=5432
    user: "50000:0"
    volumes:
      - ./src/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data
      - ./configs:/opt/airflow/configs
      - ./logs:/opt/airflow/logs
    restart: always
    networks:
      - okr_net
    command: ["airflow", "scheduler"]
    healthcheck:
      test: ["CMD-SHELL", "airflow jobs check --hostname localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Flask API
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: okr_api
    working_dir: /app
    ports:
      - "5001:5001"
    volumes:
      - ./:/app
      - ./data:/app/data
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
      airflow-db:
        condition: service_healthy
    restart: always
    networks:
      - okr_net
    environment:
      - PYTHONPATH=/app:/app/src
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - AIRFLOW_BASE_URL=http://airflow-webserver:8080
      - AIRFLOW_USER=admin
      - AIRFLOW_PASSWORD=admin
    command: ["gunicorn", "--bind", "0.0.0.0:5001", "--workers", "2", "--worker-class", "sync", "--timeout", "120", "--keep-alive", "5", "--max-requests", "1000", "--max-requests-jitter", "100", "apps.api.app:app"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Nginx reverse proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: okr_nginx
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx/mlapi.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      api:
        condition: service_healthy
    restart: always
    networks:
      - okr_net
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/health >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Oracle XE database
  oracle:
    image: gvenzl/oracle-xe:21-slim
    container_name: okr_oracle
    environment:
      - ORACLE_PASSWORD=oracle
      - ORACLE_DATABASE=OKR
      - APP_USER=okr_user
      - APP_USER_PASSWORD=okr_password
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_data:/opt/oracle/oradata
    restart: always
    networks:
      - okr_net
    healthcheck:
      test: ["CMD-SHELL", "echo 'SELECT 1 FROM DUAL;' | sqlplus -s okr_user/okr_password@//localhost:1521/OKR"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  # MLflow tracking server
  mlflow:
    build:
      context: .
      dockerfile: deploy/mlflow/Dockerfile
    image: workspace-mlflow:latest
    container_name: okr_mlflow
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow
    depends_on:
      airflow-db:
        condition: service_healthy
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:5000
      - MLFLOW_TRACKING_USERNAME=mlflow
      - MLFLOW_TRACKING_PASSWORD=mlflow
    restart: always
    networks:
      - okr_net

volumes:
  airflow_db_data:
  postgres_data:
  kafka_data:
  oracle_data:
  mlflow_data:

networks:
  okr_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16